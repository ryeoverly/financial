// app/components/TransferPortal.tsx

"use client";

import React, { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Button } from "@/components/ui/button";
import { CheckCircle, Loader2 } from "lucide-react";
import { motion } from "framer-motion";

const TransferPortal = () => {
  const [amount, setAmount] = useState("");
  const [recipient, setRecipient] = useState("");
  const [accountNumber, setAccountNumber] = useState("");
  const [loading, setLoading] = useState(false);
  const [success, setSuccess] = useState(false);
  const [error, setError] = useState("");

  const handleTransfer = async () => {
    setError("");
    if (!amount || !recipient || !accountNumber) {
      setError("All fields are required.");
      return;
    }

    setLoading(true);
    // Simulate API call
    setTimeout(() => {
      setLoading(false);
      setSuccess(true);
      setAmount("");
      setRecipient("");
      setAccountNumber("");
    }, 1500);
  };

  return (
    <motion.div
      className="max-w-md mx-auto mt-10"
      initial={{ opacity: 0, y: 30 }}
      animate={{ opacity: 1, y: 0 }}
    >
      <Card className="p-6 shadow-xl rounded-2xl">
        <CardContent>
          <h2 className="text-2xl font-semibold mb-4 text-center">Transfer Funds</h2>

          <div className="space-y-4">
            <div>
              <Label htmlFor="recipient">Recipient Name</Label>
              <Input
                id="recipient"
                placeholder="Jane Doe"
                value={recipient}
                onChange={(e) => setRecipient(e.target.value)}
              />
            </div>

            <div>
              <Label htmlFor="account">Recipient Account Number</Label>
              <Input
                id="account"
                placeholder="123456789"
                value={accountNumber}
                onChange={(e) => setAccountNumber(e.target.value)}
              />
            </div>

            <div>
              <Label htmlFor="amount">Amount ($)</Label>
              <Input
                id="amount"
                type="number"
                placeholder="100.00"
                value={amount}
                onChange={(e) => setAmount(e.target.value)}
              />
            </div>

            {error && (
              <p className="text-red-500 text-sm mt-1">{error}</p>
            )}

            <Button
              className="w-full mt-4"
              onClick={handleTransfer}
              disabled={loading}
            >
              {loading ? (
                <>
                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                  Transferring...
                </>
              ) : (
                "Transfer"
              )}
            </Button>

            {success && (
              <div className="flex items-center justify-center mt-4 text-green-600">
                <CheckCircle className="mr-2" />
                Transfer successful!
              </div>
            )}
          </div>
        </CardContent>
      </Card>
    </motion.div>
  );
};

export default TransferPortal;
